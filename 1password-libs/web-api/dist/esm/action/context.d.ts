import { AccountOverview } from "../api";
import * as model from "../model";
import * as util from "../util";
import { Notifier } from "./notifier";
import { Session } from "./session";
export interface ContextConfig {
    host: string;
    env?: string;
    demoGeneratorIsEnabled?: boolean;
    inboxBase?: string;
    internalFeaturesAreEnabled?: boolean;
    inWebView?: boolean;
    lang?: string;
    server?: string;
    shouldResetWhenSessionExpires?: boolean;
    siblingDomains?: string[];
    txtBase?: string;
}
export interface LocalContextConfig {
    host: string;
    env?: string;
    demoGeneratorIsEnabled: boolean;
    inboxBase: string;
    internalFeaturesAreEnabled: boolean;
    inWebView: boolean;
    lang?: string;
    server: string;
    shouldResetWhenSessionExpires: boolean;
    siblingDomains: string[];
    txtBase: string;
}
export declare class Context {
    id: number;
    config: LocalContextConfig;
    nc: util.events.EventEmitter;
    session: Session;
    notifier: Notifier;
    private _account;
    private _user;
    userAuth: model.Auth | undefined;
    accountOverview: AccountOverview | undefined;
    constructor(config: ContextConfig);
    private reset;
    get user(): model.OldUser | undefined;
    set user(user: model.OldUser | undefined);
    setUserUUID(uuid: string): void;
    get account(): model.Account | undefined;
    set account(account: model.Account | undefined);
    get domain(): string;
    /**
     * Handles notifications received from the server. Broadcasts the
     * notification only if it was generated by a different session.
     */
    private onNotificationReceived;
    private sendServerChanged;
    /**
     * Allows us to set the host so we can keep the
     * existing id, nc, and config. [robyoder 2017.05.13]
     */
    resetWithHost(host: string): void;
    isSignedIn(): boolean;
}
export declare const invalidateCache: (c: Context) => void;
export declare const changed: (c: Context) => void;
export declare const isSignedInAccountLoaded: (c: Context) => boolean | "" | undefined;
